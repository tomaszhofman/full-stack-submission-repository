{"version":3,"sources":["components/Filter.js","components/PersonForm.js","services/notes.js","components/Person.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","value","onChange","name","PersonForm","newName","newNumber","handleAddPerson","setNewName","setNewNumber","onSubmit","e","target","type","BASE_URL","Person","number","handleDeletePerson","onClick","Persons","persons","setPersons","setMessage","personObject","id","window","confirm","axios","delete","then","response","data","filter","person","catch","setTimeout","map","i","Notification","message","className","App","useState","search","setSearch","handleUpdatePhoneNumber","newObject","newPhoneNumber","console","log","put","useEffect","get","filteredPersons","toLowerCase","includes","handleFilter","preventDefault","ifPersonExist","find","post","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8df5074e.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div>\n      filtr shown with:\n      <input name=\"search\" value={value} onChange={onChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from 'react';\n\nconst PersonForm = ({\n  newName,\n  newNumber,\n  handleAddPerson,\n  setNewName,\n  setNewNumber,\n}) => {\n  return (\n    <form onSubmit={handleAddPerson}>\n      <div>\n        name:\n        <input\n          name=\"name\"\n          value={newName}\n          onChange={(e) => setNewName(e.target.value)}\n        />\n      </div>\n      <div>\n        number:\n        <input\n          name=\"number\"\n          value={newNumber}\n          onChange={(e) => setNewNumber(e.target.value)}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import axios from 'axios';\n\nconst BASE_URL = '/api/persons';\n\nexport const getAll = () => {\n  return axios.get(BASE_URL).then((response) => response.data);\n};\n\nexport const create = (newObject) => {\n  return axios.post(BASE_URL, newObject).then((response) => response.data);\n};\n\nexport const deleteObject = (id) => {\n  return axios.delete(`${BASE_URL}/${id}`).then((response) => response.data);\n};\n\nexport const update = (id, newObject) => {\n  return axios\n    .put(`${BASE_URL}/${id}`, newObject)\n    .then((response) => response.data);\n};\n","import React from 'react';\n\nconst Person = ({ name, number, handleDeletePerson }) => {\n  return (\n    <div>\n      {name}\n      {number}\n      <button onClick={handleDeletePerson}>delete</button>\n    </div>\n  );\n};\n\nexport default Person;\n","import React from 'react';\nimport { deleteObject } from '../services/notes';\nimport Person from './Person';\nconst Persons = ({ persons, setPersons, setMessage }) => {\n  const handleDeletePerson = (personObject) => {\n    if (window.confirm('Do you really want to delete user?')) {\n      deleteObject(personObject.id)\n        .then(() => {\n          setPersons(persons.filter((person) => person.id !== personObject.id));\n        })\n        .catch((e) => {\n          setMessage(\n            `Infomrations of ${personObject.name} has already been removed from the server`\n          );\n\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        });\n    }\n  };\n\n  return (\n    <div>\n      {persons.map((person, i) => (\n        <div key={person.name}>\n          <div>\n            <Person\n              {...person}\n              handleDeletePerson={() => handleDeletePerson(person)}\n            />\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Persons;\n","import React from 'react';\n\nconst Notification = ({ message }) => {\n  if (!message) return null;\n\n  return <div className=\"success\">{message}</div>;\n};\n\nexport default Notification;\n","import React, { useEffect, useState } from 'react';\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport { create, getAll, update } from './services/notes';\nimport Notification from './components/Notification';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [search, setSearch] = useState('');\n  const [message, setMessage] = useState(null);\n\n  const handleUpdatePhoneNumber = (personObject) => {\n    const newPhoneNumber = { ...personObject, number: newNumber };\n\n    console.log(newPhoneNumber);\n\n    update(personObject.id, newPhoneNumber).then((response) => {\n      setPersons(\n        persons.map((person) =>\n          person.id === personObject.id ? response : person\n        )\n      );\n      setMessage(`${personObject.number} was changed to ${newNumber} `);\n      setTimeout(() => {\n        setMessage(null);\n      }, 5000);\n    });\n  };\n\n  useEffect(() => {\n    getAll()\n      .then((response) => setPersons(response))\n      .catch((e) => console.log(e));\n  }, []);\n\n  const handleFilter = () => {\n    let personsCopy = [...persons];\n    const filteredPersons = personsCopy.filter((person) =>\n      person.name.toLowerCase().includes(search.toLowerCase())\n    );\n    setPersons(filteredPersons);\n  };\n\n  const handleAddPerson = (e) => {\n    e.preventDefault();\n\n    const ifPersonExist = persons.find(\n      (person) => newName.toLowerCase() === person.name.toLowerCase()\n    );\n    if (ifPersonExist) {\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, replace the old number with a new one?`\n        )\n      ) {\n        handleUpdatePhoneNumber(ifPersonExist);\n      }\n    } else {\n      const newPersonName = {\n        name: newName,\n        number: newNumber,\n      };\n\n      create(newPersonName).then((response) => {\n        setPersons([...persons, response]);\n        setNewName('');\n        setMessage(`${response.name} was added `);\n\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Notification message={message} />\n      <h2>Phonebook</h2>\n\n      <Filter\n        onChange={(e) => {\n          setSearch(e.target.value);\n          handleFilter();\n        }}\n        value={search}\n      />\n      <h2>add a new</h2>\n\n      <PersonForm\n        handleAddPerson={handleAddPerson}\n        newName={newName}\n        newNumber={newNumber}\n        setNewName={setNewName}\n        setNewNumber={setNewNumber}\n      />\n\n      <h2>Numbers</h2>\n\n      <Persons\n        persons={persons}\n        setPersons={setPersons}\n        setMessage={setMessage}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}